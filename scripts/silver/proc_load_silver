INSERT INTO silver.crm_cust_info(
cst_id, 
cst_key,
cst_firstname,
cst_lastname,
cst_marital_status,
cst_gndr,
cst_create_date
)

SELECT 
cst_id,
cst_key,
TRIM(cst_firstname)AS cst_firstname,
TRIM (cst_lastname) AS cst_lastname,
CASE	
	WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single'
	WHEN UPPER(TRIM(cst_marital_status)) = 'M' THEN 'Married'
	ELSE 'Unknown'
END cst_marital_status,
CASE WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
	 WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
	ELSE 'Unknown'
END cst_gndr,
cst_create_date
FROM (
	SELECT *,
	ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag_last
	FROM bronze.crm_cust_info
	WHERE cst_id IS NOT NULL
)t WHERE flag_last = 1 



BAKCUP QUERY:
SELECT 
prd_id,
prd_key,
REPLACE (SUBSTRING (prd_key, 1, 5), '-', '_') AS cat_id,
SUBSTRING (prd_key, 7,LEN (prd_key)) AS prd_key ,
prd_nm,
IS NULL (prd_cost, 0) as prd_cost),
prd_line,
prd_start_dt,
prd_dt
FROM bronze.crm_prd_info


SELECT 
    SUBSTRING(prd_key, 7, LEN(prd_key)) AS prd_key
FROM bronze.crm_prd_info
WHERE SUBSTRING(prd_key, 7, LEN(prd_key)) NOT IN (
    SELECT DISTINCT sls_prd_key 
    FROM bronze.crm_sales_details
);

select * from bronze.crm_prd_info


select * from bronze.crm_prd_info
where prd_nm != TRIM()

select * from bronze.crm_prd_info
where prd_cost < 0 OR prd_cost IS NULL




---
select prd_key,
COUNT(*)
from bronze.crm_prd_info
GROUP BY prd_key
HAVING COUNT (*) > 1 or prd_key IS NULL;

select prd_id,
COUNT(*)
 FROM bronze.crm_prd_info
 GROUP BY prd_id
 HAVING COUNT (*) > 1 or prd_id IS NULL

